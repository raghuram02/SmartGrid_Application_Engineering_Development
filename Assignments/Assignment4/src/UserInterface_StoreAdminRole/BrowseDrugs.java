/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface_StoreAdminRole;

import UserInterface_Supplier.*;
import Business.Drug;
import Business.DrugCatalog;
import Business.Store;
import Business.Supplier;
import Business.SupplierDirectory;
import UserInterface_CVSAdminRole.ManageCVSStoresJPanel;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Raghuram
 */
public class BrowseDrugs extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private SupplierDirectory supplierDirectory;
    private Store store;
    private boolean isCheckedOut = false;

    /**
     * Creates new form CreateNewDrugJPanel
     */
    public BrowseDrugs(JPanel userProcessContainer, SupplierDirectory supplierDirectory, Store store) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.supplierDirectory = supplierDirectory;
        this.store = store;
        populateSupplierCombo();
    }

    private void populateSupplierCombo() {
        supplierComboBox.removeAllItems();
        for (Supplier s : supplierDirectory.getSupplierDirectory()) {
            supplierComboBox.addItem(s);
        }
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) drugTable.getModel();
        Supplier s = (Supplier) supplierComboBox.getSelectedItem();
        dtm.setRowCount(0);
        if (s != null) {
            for (Drug d : s.getDrugList().getDrugList()) {
                Object row[] = new Object[3];
                row[0] = d;
                row[1] = d.getDrugPrice();
                row[2] = d.getQuantity();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        supplierComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        drugTable = new javax.swing.JTable();
        viewProdjButton2 = new javax.swing.JButton();
        addtoCartButton6 = new javax.swing.JButton();
        quantitySpinner = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Item in cart");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, 30));

        supplierComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        supplierComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierComboBoxActionPerformed(evt);
            }
        });
        add(supplierComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 150, 30));

        drugTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Name", "Drug Price", "Drug Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(drugTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 730, 180));

        viewProdjButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        viewProdjButton2.setText("View Drug Detail");
        viewProdjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewProdjButton2ActionPerformed(evt);
            }
        });
        add(viewProdjButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 170, -1));

        addtoCartButton6.setText("ADD TO CART");
        addtoCartButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtoCartButton6ActionPerformed(evt);
            }
        });
        add(addtoCartButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 280, 110, -1));

        quantitySpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        add(quantitySpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 280, 50, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Quantity:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 280, 60, -1));

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Name", "Price", "Quantity", "Total Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 730, 110));

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Supplier Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void supplierComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierComboBoxActionPerformed
populateTable();
    }//GEN-LAST:event_supplierComboBoxActionPerformed

    private void viewProdjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProdjButton2ActionPerformed
        // TODO add your handling code here:

        int row = drugTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Select a Drug",
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Drug d = (Drug) drugTable.getValueAt(row, 0);
        ViewDrugOrder vpdjp = new ViewDrugOrder(d, userProcessContainer);
        userProcessContainer.add("ViewDrugDetailsJPanel", vpdjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_viewProdjButton2ActionPerformed

    private void addtoCartButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtoCartButton6ActionPerformed

        int selectedRow = drugTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a Drug !", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Drug selectedDrug = (Drug) drugTable.getValueAt(selectedRow, 0);
        int quantity = (Integer) quantitySpinner.getValue();
        if (quantity < 0) {
            JOptionPane.showMessageDialog(null, "Specify a valid quantity!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else if (selectedDrug.getQuantity() < quantity) {
            JOptionPane.showMessageDialog(null, "Low on stock!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            Supplier s = (Supplier) supplierComboBox.getSelectedItem();
            boolean flag = false;
            for (Drug d : store.getDrugCatalog().getDrugList()) {
                if (d.getDrugName() == selectedDrug.getDrugName()) {
                    flag = true;
                    d.setQuantity(d.getQuantity() + quantity);
                    selectedDrug.setQuantity(selectedDrug.getQuantity() - quantity);
                    populateTable();
                    refreshTable();
                }
            }
        if(!flag){
            selectedDrug.setQuantity(selectedDrug.getQuantity() - quantity);
            Drug d = store.getDrugCatalog().addDrug();
            d.setQuantity(quantity);
            d.setDrugName(selectedDrug.getDrugName());      
            d.setDrugID(selectedDrug.getDrugID());
            d.setDrugPrice(selectedDrug.getDrugPrice());
            d.setDescription(selectedDrug.getDescription());
            d.setComposition(selectedDrug.getComposition());
            d.setExpirationDate(selectedDrug.getExpirationDate());
            d.setManufactureDate(selectedDrug.getManufactureDate());
            d.setPurpose(selectedDrug.getPurpose());
            d.setSideeffects(selectedDrug.getSideeffects());
            populateTable();
            refreshTable();
        }    
            }
        
        
        

        // TODO add your handling code here:
    }//GEN-LAST:event_addtoCartButton6ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        backAction();
        }

        private void backAction() {
            userProcessContainer.remove(this);
            Component[] componentArray = userProcessContainer.getComponents();
            Component component = componentArray[componentArray.length - 1];
            ManageStoreDrugCatalogJPanel manageDrugCatalogJPanel = (ManageStoreDrugCatalogJPanel) component;
            manageDrugCatalogJPanel.populateTable();

            CardLayout Layout = (CardLayout) userProcessContainer.getLayout();
            Layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed
//    public void refreshTable(String key) {
//        DefaultTableModel dtm = (DefaultTableModel) drugTable.getModel();
//        Supplier s = (Supplier) supplierComboBox.getSelectedItem();
//        dtm.setRowCount(0);
//        if (s != null) {
//            for (Drug d : s.getDrugList().getDrugList()) {
//                if (d.getDrugName().equalsIgnoreCase(key)) {
//                    Object row[] = new Object[4];
//                    row[0] = d;
//                    row[1] = d.getDrugPrice();
//                    row[2] = d.getQuantity();
//                    dtm.addRow(row);
//                }
//            }
//        }
//
//    }

    public void refreshTable() {
        DefaultTableModel dtm = (DefaultTableModel) orderTable.getModel();
        dtm.setRowCount(0);
        for (Drug d : store.getDrugCatalog().getDrugList()) {
            Object row[] = new Object[4];
            row[0] = d;
            row[1] = d.getDrugPrice();
            row[2] = d.getQuantity();
            row[3] = d.getDrugPrice() * d.getQuantity();
            dtm.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addtoCartButton6;
    private javax.swing.JButton btnBack;
    private javax.swing.JTable drugTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderTable;
    private javax.swing.JSpinner quantitySpinner;
    private javax.swing.JComboBox supplierComboBox;
    private javax.swing.JButton viewProdjButton2;
    // End of variables declaration//GEN-END:variables
}
