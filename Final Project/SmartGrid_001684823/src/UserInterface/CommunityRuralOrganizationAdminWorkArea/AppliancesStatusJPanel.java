/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CommunityRuralOrganizationAdminWorkArea;

import Business.Appliances.Appliance;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Person.Person;
import Business.SmartGrid;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Raghuram
 */
public class AppliancesStatusJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private SmartGrid sg;
    private UserAccount account;
    private Enterprise enterprise;
    private Organization organization;
    private Person person;

//    private Appliance appliance;
    /**
     * Creates new form AppliancesStatusJPanel
     */
    public AppliancesStatusJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, Person person) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
//        this.appliance = appliance;
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.organization = organization;
        this.account = account;
        this.person = person;
        System.out.println("person inside IA" + person);
        populateApplianceTable();
    }

    private void populateApplianceTable() {
        DefaultTableModel model = (DefaultTableModel) applianceTbl.getModel();
        model.setRowCount(0);
        for (Appliance a : person.getAppliancesDirectory().getApplianceList()) {
            Object[] row = new Object[2];
            row[0] = a;
            row[1] = a.getQuantity();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        backJButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        applianceTbl = new javax.swing.JTable();
        viewDetails = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtApplianceName = new javax.swing.JTextField();
        btnUpdateStore = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        refreshJButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("APPLIANCES STATUS");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, -1, 20));

        backJButton3.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        backJButton3.setText("<< Back");
        backJButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        backJButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton3ActionPerformed(evt);
            }
        });
        add(backJButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 490, 80, 30));

        applianceTbl.setBackground(new java.awt.Color(102, 255, 51));
        applianceTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Appliance Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(applianceTbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 540, 230));

        viewDetails.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        viewDetails.setText("View Details");
        viewDetails.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        viewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsActionPerformed(evt);
            }
        });
        add(viewDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 420, 130, 30));

        jLabel6.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        jLabel6.setText("Quantity");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 360, -1, 40));

        txtQuantity.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        txtQuantity.setEnabled(false);
        add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 360, 160, 30));

        jLabel8.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        jLabel8.setText("Appliance Name");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 320, -1, 40));

        txtApplianceName.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        txtApplianceName.setEnabled(false);
        add(txtApplianceName, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 320, 160, 30));

        btnUpdateStore.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        btnUpdateStore.setText("Update Details");
        btnUpdateStore.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnUpdateStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateStoreActionPerformed(evt);
            }
        });
        add(btnUpdateStore, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 420, 140, 30));

        btnSave.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 420, 70, 30));

        refreshJButton1.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        refreshJButton1.setText("Refresh");
        refreshJButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        refreshJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButton1ActionPerformed(evt);
            }
        });
        add(refreshJButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 40, 70, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton3ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);    // TODO add your handling code here:
    }//GEN-LAST:event_backJButton3ActionPerformed

    private void viewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsActionPerformed
        int selectedRow = applianceTbl.getSelectedRow();
        if (selectedRow >= 0) {
            Appliance a = (Appliance) applianceTbl.getValueAt(selectedRow, 0);
            txtApplianceName.setText(a.getApplianceName());
            txtQuantity.setText(a.getQuantity());
         } else {
            JOptionPane.showMessageDialog(null, "Please select an entry from the table", "Warning", JOptionPane.INFORMATION_MESSAGE);
        } 
        // TODO add your handling code here:
    }//GEN-LAST:event_viewDetailsActionPerformed

    private void btnUpdateStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateStoreActionPerformed
        txtApplianceName.setEnabled(true);
        txtQuantity.setEnabled(true);
        btnSave.setEnabled(true);
        btnUpdateStore.setEnabled(false);
    }//GEN-LAST:event_btnUpdateStoreActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        if (txtApplianceName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter a Customer Name");
            return;
        } else if (txtQuantity.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter a valid Address");
            return;
        }

        //
        //        } else if (!txtPhone.getText().matches("\\d+")) {
        //            JOptionPane.showMessageDialog(null, "Enter a valid Phone Number");
        //            return;
        //        }
        int selectedRow = applianceTbl.getSelectedRow();
        Appliance a = (Appliance) applianceTbl.getValueAt(selectedRow, 0);
        a.setApplianceName(txtApplianceName.getText());
        a.setQuantity(txtQuantity.getText());

//            p.setPhoneNumber(Integer.parseInt(txtPhone.getText()));
        JOptionPane.showMessageDialog(null, "Customer Details saved successfully",
                "Information", JOptionPane.INFORMATION_MESSAGE);

        txtApplianceName.setEditable(false);
        txtQuantity.setEditable(false);
        btnSave.setEnabled(false);
        btnUpdateStore.setEnabled(true);
        populateApplianceTable();

    }//GEN-LAST:event_btnSaveActionPerformed

    private void refreshJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButton1ActionPerformed
     
    }//GEN-LAST:event_refreshJButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable applianceTbl;
    private javax.swing.JButton backJButton3;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdateStore;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton refreshJButton1;
    private javax.swing.JTextField txtApplianceName;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JButton viewDetails;
    // End of variables declaration//GEN-END:variables
}
